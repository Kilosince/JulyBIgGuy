{"ast":null,"code":"// utils/apiHelper.js\nexport const api = async (path, method = 'GET', body = null, credentials = null) => {\n  const url = \"http://localhost:5000/api\" + path;\n  const options = {\n    method,\n    headers: {}\n  };\n  if (body) {\n    options.body = JSON.stringify(body);\n    options.headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n  }\n  if (credentials) {\n    const encodedCredentials = btoa(`${credentials.username}:${credentials.password}`);\n    options.headers.Authorization = `Basic ${encodedCredentials}`;\n  }\n  try {\n    const response = await fetch(url, options);\n    const contentType = response.headers.get(\"content-type\");\n    if (contentType && contentType.indexOf(\"application/json\") !== -1) {\n      return await response.json();\n    } else {\n      throw new Error('API response was not JSON');\n    }\n  } catch (error) {\n    console.error('Error in API request:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["api","path","method","body","credentials","url","options","headers","JSON","stringify","encodedCredentials","btoa","username","password","Authorization","response","fetch","contentType","get","indexOf","json","Error","error","console"],"sources":["C:/react-auth/client/src/utils/apiHelper.js"],"sourcesContent":["// utils/apiHelper.js\r\nexport const api = async (path, method = 'GET', body = null, credentials = null) => {\r\n  const url = \"http://localhost:5000/api\" + path;\r\n\r\n  const options = {\r\n    method,\r\n    headers: {}\r\n  };\r\n\r\n  if (body) {\r\n    options.body = JSON.stringify(body);\r\n    options.headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n  }\r\n\r\n  if (credentials) {\r\n    const encodedCredentials = btoa(`${credentials.username}:${credentials.password}`);\r\n    options.headers.Authorization = `Basic ${encodedCredentials}`;\r\n  }\r\n\r\n  try {\r\n    const response = await fetch(url, options);\r\n    const contentType = response.headers.get(\"content-type\");\r\n\r\n    if (contentType && contentType.indexOf(\"application/json\") !== -1) {\r\n      return await response.json();\r\n    } else {\r\n      throw new Error('API response was not JSON');\r\n    }\r\n  } catch (error) {\r\n    console.error('Error in API request:', error);\r\n    throw error;\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,OAAO,MAAMA,GAAG,GAAG,MAAAA,CAAOC,IAAI,EAAEC,MAAM,GAAG,KAAK,EAAEC,IAAI,GAAG,IAAI,EAAEC,WAAW,GAAG,IAAI,KAAK;EAClF,MAAMC,GAAG,GAAG,2BAA2B,GAAGJ,IAAI;EAE9C,MAAMK,OAAO,GAAG;IACdJ,MAAM;IACNK,OAAO,EAAE,CAAC;EACZ,CAAC;EAED,IAAIJ,IAAI,EAAE;IACRG,OAAO,CAACH,IAAI,GAAGK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IACnCG,OAAO,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,iCAAiC;EACrE;EAEA,IAAIH,WAAW,EAAE;IACf,MAAMM,kBAAkB,GAAGC,IAAI,CAAE,GAAEP,WAAW,CAACQ,QAAS,IAAGR,WAAW,CAACS,QAAS,EAAC,CAAC;IAClFP,OAAO,CAACC,OAAO,CAACO,aAAa,GAAI,SAAQJ,kBAAmB,EAAC;EAC/D;EAEA,IAAI;IACF,MAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACX,GAAG,EAAEC,OAAO,CAAC;IAC1C,MAAMW,WAAW,GAAGF,QAAQ,CAACR,OAAO,CAACW,GAAG,CAAC,cAAc,CAAC;IAExD,IAAID,WAAW,IAAIA,WAAW,CAACE,OAAO,CAAC,kBAAkB,CAAC,KAAK,CAAC,CAAC,EAAE;MACjE,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,MAAM;MACL,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;IAC9C;EACF,CAAC,CAAC,OAAOC,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC7C,MAAMA,KAAK;EACb;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}