{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-auth\\\\client\\\\src\\\\components\\\\PaymentProcess.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentProcess = () => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [editIndex, setEditIndex] = useState(null);\n  const [editCartItem, setEditCartItem] = useState({});\n  const navigate = useNavigate();\n  useEffect(() => {\n    const userId = getUserId(); // Replace getUserId with the actual function to get the user ID\n    fetchCartData(userId);\n  }, []);\n  const getUserId = () => {\n    // Logic to get the user ID from the authentication system or context\n  };\n  const fetchCartData = async userId => {\n    try {\n      const response = await fetch(`/api/users/${userId}/cart`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch cart data');\n      }\n      const data = await response.json();\n      setCart(data.cart || []);\n      // Calculate total from fetched cart data\n      const totalAmount = calculateTotal(data.cart);\n      setTotal(totalAmount);\n    } catch (error) {\n      console.error('Error fetching cart:', error);\n    }\n  };\n  const calculateTotal = cartItems => {\n    return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\n  };\n\n  // Rest of your component code...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 7\n  }, this);\n};\n_s(PaymentProcess, \"YSP3k/TQ/7vJkVcoVGJIbED44w0=\", false, function () {\n  return [useNavigate];\n});\n_c = PaymentProcess;\nexport default PaymentProcess;\nvar _c;\n$RefreshReg$(_c, \"PaymentProcess\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","PaymentProcess","_s","cart","setCart","total","setTotal","editIndex","setEditIndex","editCartItem","setEditCartItem","navigate","userId","getUserId","fetchCartData","response","fetch","ok","Error","data","json","totalAmount","calculateTotal","error","console","cartItems","reduce","item","price","quantity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react-auth/client/src/components/PaymentProcess.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PaymentProcess = () => {\r\n    const [cart, setCart] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [editIndex, setEditIndex] = useState(null);\r\n    const [editCartItem, setEditCartItem] = useState({});\r\n    const navigate = useNavigate();\r\n  \r\n    useEffect(() => {\r\n      const userId = getUserId(); // Replace getUserId with the actual function to get the user ID\r\n      fetchCartData(userId);\r\n    }, []);\r\n\r\n    const getUserId = () => {\r\n      // Logic to get the user ID from the authentication system or context\r\n    };\r\n\r\n    const fetchCartData = async (userId) => {\r\n      try {\r\n        const response = await fetch(`/api/users/${userId}/cart`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch cart data');\r\n        }\r\n        const data = await response.json();\r\n        setCart(data.cart || []);\r\n        // Calculate total from fetched cart data\r\n        const totalAmount = calculateTotal(data.cart);\r\n        setTotal(totalAmount);\r\n      } catch (error) {\r\n        console.error('Error fetching cart:', error);\r\n      }\r\n    };\r\n\r\n    const calculateTotal = (cartItems) => {\r\n      return cartItems.reduce((total, item) => total + item.price * item.quantity, 0);\r\n    };\r\n  \r\n    // Rest of your component code...\r\n\r\n    return (\r\n      <div>\r\n        <h1>My Cart</h1>\r\n        {/* Render cart items based on fetched cart data */}\r\n        {/* Rest of your component code... */}\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default PaymentProcess;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACa,YAAY,EAAEC,eAAe,CAAC,GAAGd,QAAQ,CAAC,CAAC,CAAC,CAAC;EACpD,MAAMe,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACd,MAAMe,MAAM,GAAGC,SAAS,CAAC,CAAC,CAAC,CAAC;IAC5BC,aAAa,CAACF,MAAM,CAAC;EACvB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,SAAS,GAAGA,CAAA,KAAM;IACtB;EAAA,CACD;EAED,MAAMC,aAAa,GAAG,MAAOF,MAAM,IAAK;IACtC,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMC,KAAK,CAAE,cAAaJ,MAAO,OAAM,CAAC;MACzD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,2BAA2B,CAAC;MAC9C;MACA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAClChB,OAAO,CAACe,IAAI,CAAChB,IAAI,IAAI,EAAE,CAAC;MACxB;MACA,MAAMkB,WAAW,GAAGC,cAAc,CAACH,IAAI,CAAChB,IAAI,CAAC;MAC7CG,QAAQ,CAACe,WAAW,CAAC;IACvB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C;EACF,CAAC;EAED,MAAMD,cAAc,GAAIG,SAAS,IAAK;IACpC,OAAOA,SAAS,CAACC,MAAM,CAAC,CAACrB,KAAK,EAAEsB,IAAI,KAAKtB,KAAK,GAAGsB,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,QAAQ,EAAE,CAAC,CAAC;EACjF,CAAC;;EAED;;EAEA,oBACE7B,OAAA;IAAA8B,QAAA,eACE9B,OAAA;MAAA8B,QAAA,EAAI;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGb,CAAC;AAEZ,CAAC;AAAChC,EAAA,CA7CID,cAAc;EAAA,QAKCH,WAAW;AAAA;AAAAqC,EAAA,GAL1BlC,cAAc;AA+CpB,eAAeA,cAAc;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}