{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-auth\\\\client\\\\src\\\\components\\\\StripePay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { loadStripe } from '@stripe/stripe-js';\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport UserContext from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe('pk_live_nZvWGLv87Odj065JZPm631Ce');\nconst StripePay = () => {\n  _s();\n  const {\n    authUser\n  } = useContext(UserContext);\n  const stripe = useStripe();\n  const elements = useElements();\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n  const [error, setError] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [clientSecret, setClientSecret] = useState('');\n  useEffect(() => {\n    const fetchCartData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/users/${encodeURIComponent(authUser._id)}/cart`);\n        if (response.status === 200) {\n          setCart(response.data.cart);\n          const totalAmount = response.data.cart.reduce((acc, item) => acc + item.price * item.quantity, 0);\n          setTotal(totalAmount);\n        } else {\n          console.error('Error fetching cart data: status', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching cart data:', error);\n      }\n    };\n    const createPaymentIntent = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/api/create-payment-intent', {\n          amount: total\n        });\n        setClientSecret(response.data.clientSecret);\n      } catch (error) {\n        console.error('Error creating payment intent:', error);\n      }\n    };\n    fetchCartData();\n    createPaymentIntent();\n  }, [total]);\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement)\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setSucceeded(true);\n      setProcessing(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: processing || succeeded,\n      children: processing ? 'Processing...' : 'Pay Now'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 19\n    }, this), succeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment succeeded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 7\n  }, this);\n};\n_s(StripePay, \"9kZEi4mVYNqGfdK0itQCKBFaq0c=\", false, function () {\n  return [useStripe, useElements];\n});\n_c = StripePay;\nexport default StripePay;\nvar _c;\n$RefreshReg$(_c, \"StripePay\");","map":{"version":3,"names":["React","useState","useEffect","useContext","useNavigate","axios","loadStripe","Elements","CardElement","useStripe","useElements","UserContext","jsxDEV","_jsxDEV","stripePromise","StripePay","_s","authUser","stripe","elements","cart","setCart","total","setTotal","error","setError","succeeded","setSucceeded","processing","setProcessing","clientSecret","setClientSecret","fetchCartData","response","get","encodeURIComponent","_id","status","data","totalAmount","reduce","acc","item","price","quantity","console","createPaymentIntent","post","amount","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","message","onSubmit","children","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/react-auth/client/src/components/StripePay.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport { loadStripe } from '@stripe/stripe-js';\r\nimport { Elements, CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst stripePromise = loadStripe('pk_live_nZvWGLv87Odj065JZPm631Ce');\r\n\r\nconst StripePay = () => {\r\n    const { authUser } = useContext(UserContext);\r\n    const stripe = useStripe();\r\n    const elements = useElements();\r\n    const [cart, setCart] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n    const [error, setError] = useState(null);\r\n    const [succeeded, setSucceeded] = useState(false);\r\n    const [processing, setProcessing] = useState(false);\r\n    const [clientSecret, setClientSecret] = useState('');\r\n  \r\n    useEffect(() => {\r\n        const fetchCartData = async () => {\r\n            try {\r\n              const response = await axios.get(`http://localhost:5000/api/users/${encodeURIComponent(authUser._id)}/cart`);\r\n              if (response.status === 200) {\r\n                setCart(response.data.cart);\r\n                const totalAmount = response.data.cart.reduce((acc, item) => acc + (item.price * item.quantity), 0);\r\n                setTotal(totalAmount);\r\n              } else {\r\n                console.error('Error fetching cart data: status', response.status);\r\n              }\r\n            } catch (error) {\r\n              console.error('Error fetching cart data:', error);\r\n            }\r\n          };\r\n\r\n      const createPaymentIntent = async () => {\r\n        try {\r\n          const response = await axios.post('http://localhost:5000/api/create-payment-intent', { amount: total });\r\n          setClientSecret(response.data.clientSecret);\r\n        } catch (error) {\r\n          console.error('Error creating payment intent:', error);\r\n        }\r\n      };\r\n\r\n     \r\n      fetchCartData();\r\n      createPaymentIntent();\r\n    }, [total]);\r\n  \r\n    const handleSubmit = async (event) => {\r\n      event.preventDefault();\r\n      setProcessing(true);\r\n  \r\n      const payload = await stripe.confirmCardPayment(clientSecret, {\r\n        payment_method: {\r\n          card: elements.getElement(CardElement),\r\n        },\r\n      });\r\n  \r\n      if (payload.error) {\r\n        setError(`Payment failed: ${payload.error.message}`);\r\n        setProcessing(false);\r\n      } else {\r\n        setError(null);\r\n        setSucceeded(true);\r\n        setProcessing(false);\r\n      }\r\n    };\r\n  \r\n    return (\r\n      <form onSubmit={handleSubmit}>\r\n        <CardElement />\r\n        <button disabled={processing || succeeded}>\r\n          {processing ? 'Processing...' : 'Pay Now'}\r\n        </button>\r\n        {error && <div>{error}</div>}\r\n        {succeeded && <div>Payment succeeded!</div>}\r\n      </form>\r\n    );\r\n  };\r\n\r\n  export default StripePay;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC9D,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,UAAU,QAAQ,mBAAmB;AAC9C,SAASC,QAAQ,EAAEC,WAAW,EAAEC,SAAS,EAAEC,WAAW,QAAQ,yBAAyB;AACvF,OAAOC,WAAW,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGR,UAAU,CAAC,kCAAkC,CAAC;AAEpE,MAAMS,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM;IAAEC;EAAS,CAAC,GAAGd,UAAU,CAACQ,WAAW,CAAC;EAC5C,MAAMO,MAAM,GAAGT,SAAS,CAAC,CAAC;EAC1B,MAAMU,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,IAAI,EAAEC,OAAO,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACqB,KAAK,EAAEC,QAAQ,CAAC,GAAGtB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACyB,SAAS,EAAEC,YAAY,CAAC,GAAG1B,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,KAAK,CAAC;EACnD,MAAM,CAAC6B,YAAY,EAAEC,eAAe,CAAC,GAAG9B,QAAQ,CAAC,EAAE,CAAC;EAEpDC,SAAS,CAAC,MAAM;IACZ,MAAM8B,aAAa,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAM5B,KAAK,CAAC6B,GAAG,CAAE,mCAAkCC,kBAAkB,CAAClB,QAAQ,CAACmB,GAAG,CAAE,OAAM,CAAC;QAC5G,IAAIH,QAAQ,CAACI,MAAM,KAAK,GAAG,EAAE;UAC3BhB,OAAO,CAACY,QAAQ,CAACK,IAAI,CAAClB,IAAI,CAAC;UAC3B,MAAMmB,WAAW,GAAGN,QAAQ,CAACK,IAAI,CAAClB,IAAI,CAACoB,MAAM,CAAC,CAACC,GAAG,EAAEC,IAAI,KAAKD,GAAG,GAAIC,IAAI,CAACC,KAAK,GAAGD,IAAI,CAACE,QAAS,EAAE,CAAC,CAAC;UACnGrB,QAAQ,CAACgB,WAAW,CAAC;QACvB,CAAC,MAAM;UACLM,OAAO,CAACrB,KAAK,CAAC,kCAAkC,EAAES,QAAQ,CAACI,MAAM,CAAC;QACpE;MACF,CAAC,CAAC,OAAOb,KAAK,EAAE;QACdqB,OAAO,CAACrB,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC;IAEL,MAAMsB,mBAAmB,GAAG,MAAAA,CAAA,KAAY;MACtC,IAAI;QACF,MAAMb,QAAQ,GAAG,MAAM5B,KAAK,CAAC0C,IAAI,CAAC,iDAAiD,EAAE;UAAEC,MAAM,EAAE1B;QAAM,CAAC,CAAC;QACvGS,eAAe,CAACE,QAAQ,CAACK,IAAI,CAACR,YAAY,CAAC;MAC7C,CAAC,CAAC,OAAON,KAAK,EAAE;QACdqB,OAAO,CAACrB,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAGDQ,aAAa,CAAC,CAAC;IACfc,mBAAmB,CAAC,CAAC;EACvB,CAAC,EAAE,CAACxB,KAAK,CAAC,CAAC;EAEX,MAAM2B,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IACtBtB,aAAa,CAAC,IAAI,CAAC;IAEnB,MAAMuB,OAAO,GAAG,MAAMlC,MAAM,CAACmC,kBAAkB,CAACvB,YAAY,EAAE;MAC5DwB,cAAc,EAAE;QACdC,IAAI,EAAEpC,QAAQ,CAACqC,UAAU,CAAChD,WAAW;MACvC;IACF,CAAC,CAAC;IAEF,IAAI4C,OAAO,CAAC5B,KAAK,EAAE;MACjBC,QAAQ,CAAE,mBAAkB2B,OAAO,CAAC5B,KAAK,CAACiC,OAAQ,EAAC,CAAC;MACpD5B,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC,MAAM;MACLJ,QAAQ,CAAC,IAAI,CAAC;MACdE,YAAY,CAAC,IAAI,CAAC;MAClBE,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,oBACEhB,OAAA;IAAM6C,QAAQ,EAAET,YAAa;IAAAU,QAAA,gBAC3B9C,OAAA,CAACL,WAAW;MAAAoD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACflD,OAAA;MAAQmD,QAAQ,EAAEpC,UAAU,IAAIF,SAAU;MAAAiC,QAAA,EACvC/B,UAAU,GAAG,eAAe,GAAG;IAAS;MAAAgC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACRvC,KAAK,iBAAIX,OAAA;MAAA8C,QAAA,EAAMnC;IAAK;MAAAoC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,EAC3BrC,SAAS,iBAAIb,OAAA;MAAA8C,QAAA,EAAK;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACvC,CAAC;AAEX,CAAC;AAAC/C,EAAA,CAvEED,SAAS;EAAA,QAEIN,SAAS,EACPC,WAAW;AAAA;AAAAuD,EAAA,GAH1BlD,SAAS;AAyEb,eAAeA,SAAS;AAAC,IAAAkD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}