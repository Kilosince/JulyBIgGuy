{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-auth\\\\client\\\\src\\\\components\\\\PaymentProcess.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentProcess = ({\n  cartPro,\n  inTotal\n}) => {\n  _s();\n  const [cart, setCart] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  /* const [editIndex, setEditIndex] = useState(null);\r\n  const [editCartItem, setEditCartItem] = useState({});\r\n  const navigate = useNavigate();*/\n\n  useEffect(() => {\n    const savedCart = cartPro;\n    const savedTotal = inTotal;\n    if (savedCart) setCart(savedCart);\n    if (savedTotal) setTotal(savedTotal);\n    console.log(\"No way\");\n    console.log(savedTotal);\n  }, []);\n  /*\r\n    const handleQuantityChange = (index, value) => {\r\n      const updatedCartItem = { ...editCartItem, quantity: value };\r\n      setEditCartItem(updatedCartItem);\r\n    };\r\n  \r\n    const handleNotesChange = (index, value) => {\r\n      const updatedCartItem = { ...editCartItem, notes: value };\r\n      setEditCartItem(updatedCartItem);\r\n    };\r\n  \r\n    const handleEditItem = (index) => {\r\n      setEditIndex(index);\r\n      setEditCartItem({ ...cart[index] });\r\n    };\r\n  \r\n    const handleSaveChanges = () => {\r\n      const updatedCart = [...cart];\r\n      const item = updatedCart[editIndex];\r\n      const priceDifference = item.price * (editCartItem.quantity - item.quantity);\r\n      updatedCart[editIndex] = { ...editCartItem };\r\n      setCart(updatedCart);\r\n      setTotal(prevTotal => prevTotal + priceDifference);\r\n      setEditIndex(null);\r\n    };\r\n  \r\n    const handleCancelEdit = () => {\r\n      setEditIndex(null);\r\n      setEditCartItem({});\r\n    };\r\n  \r\n    const handleDeleteItem = (index) => {\r\n      const updatedCart = [...cart];\r\n      const item = updatedCart.splice(index, 1)[0];\r\n      setCart(updatedCart);\r\n      setTotal(prevTotal => prevTotal - (item.price * item.quantity));\r\n    };\r\n  \r\n    const handleUpdateCart = () => {\r\n      // Save updated cart data back to local storage or send it to the server\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n      localStorage.setItem('total', JSON.stringify(total));\r\n      alert('Cart updated successfully');\r\n    };\r\n  \r\n    const handleGoBack = () => {\r\n      navigate('/');\r\n    };\r\n  */\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n_s(PaymentProcess, \"d7rM/Gu5Boo36K50NmkeLGTjXc4=\");\n_c = PaymentProcess;\nexport default PaymentProcess;\nvar _c;\n$RefreshReg$(_c, \"PaymentProcess\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","PaymentProcess","cartPro","inTotal","_s","cart","setCart","total","setTotal","savedCart","savedTotal","console","log","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react-auth/client/src/components/PaymentProcess.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst PaymentProcess = ({ cartPro, inTotal }) => {\r\n    const [cart, setCart] = useState([]);\r\n    const [total, setTotal] = useState(0);\r\n  \r\n    /* const [editIndex, setEditIndex] = useState(null);\r\n    const [editCartItem, setEditCartItem] = useState({});\r\n    const navigate = useNavigate();*/\r\n  \r\n    useEffect(() => {\r\n      const savedCart = cartPro;\r\n      const savedTotal = inTotal;\r\n      if (savedCart) setCart(savedCart);\r\n      if (savedTotal) setTotal(savedTotal);\r\n      console.log(\"No way\");\r\n      console.log(savedTotal);\r\n    }, []);\r\n  /*\r\n    const handleQuantityChange = (index, value) => {\r\n      const updatedCartItem = { ...editCartItem, quantity: value };\r\n      setEditCartItem(updatedCartItem);\r\n    };\r\n  \r\n    const handleNotesChange = (index, value) => {\r\n      const updatedCartItem = { ...editCartItem, notes: value };\r\n      setEditCartItem(updatedCartItem);\r\n    };\r\n  \r\n    const handleEditItem = (index) => {\r\n      setEditIndex(index);\r\n      setEditCartItem({ ...cart[index] });\r\n    };\r\n  \r\n    const handleSaveChanges = () => {\r\n      const updatedCart = [...cart];\r\n      const item = updatedCart[editIndex];\r\n      const priceDifference = item.price * (editCartItem.quantity - item.quantity);\r\n      updatedCart[editIndex] = { ...editCartItem };\r\n      setCart(updatedCart);\r\n      setTotal(prevTotal => prevTotal + priceDifference);\r\n      setEditIndex(null);\r\n    };\r\n  \r\n    const handleCancelEdit = () => {\r\n      setEditIndex(null);\r\n      setEditCartItem({});\r\n    };\r\n  \r\n    const handleDeleteItem = (index) => {\r\n      const updatedCart = [...cart];\r\n      const item = updatedCart.splice(index, 1)[0];\r\n      setCart(updatedCart);\r\n      setTotal(prevTotal => prevTotal - (item.price * item.quantity));\r\n    };\r\n  \r\n    const handleUpdateCart = () => {\r\n      // Save updated cart data back to local storage or send it to the server\r\n      localStorage.setItem('cart', JSON.stringify(cart));\r\n      localStorage.setItem('total', JSON.stringify(total));\r\n      alert('Cart updated successfully');\r\n    };\r\n  \r\n    const handleGoBack = () => {\r\n      navigate('/');\r\n    };\r\n  */\r\n    return (\r\n      <div>\r\n      \r\n      </div>\r\n    );\r\n  };\r\n  \r\n\r\nexport default PaymentProcess;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,cAAc,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAQ,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;;EAErC;AACJ;AACA;;EAEIC,SAAS,CAAC,MAAM;IACd,MAAMY,SAAS,GAAGP,OAAO;IACzB,MAAMQ,UAAU,GAAGP,OAAO;IAC1B,IAAIM,SAAS,EAAEH,OAAO,CAACG,SAAS,CAAC;IACjC,IAAIC,UAAU,EAAEF,QAAQ,CAACE,UAAU,CAAC;IACpCC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrBD,OAAO,CAACC,GAAG,CAACF,UAAU,CAAC;EACzB,CAAC,EAAE,EAAE,CAAC;EACR;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACI,oBACEV,OAAA;IAAAa,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEK,CAAC;AAEV,CAAC;AAACZ,EAAA,CAtEEH,cAAc;AAAAgB,EAAA,GAAdhB,cAAc;AAyEpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}