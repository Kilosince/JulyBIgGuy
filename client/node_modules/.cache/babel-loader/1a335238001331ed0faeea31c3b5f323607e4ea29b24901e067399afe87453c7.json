{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-auth\\\\client\\\\src\\\\components\\\\StripePay.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport UserContext from '../context/UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StripePay = ({\n  total\n}) => {\n  _s();\n  const {\n    authUser\n  } = useContext(UserContext);\n  const stripe = useStripe();\n  const elements = useElements();\n  const navigate = useNavigate();\n  const [error, setError] = useState(null);\n  const [succeeded, setSucceeded] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [clientSecret, setClientSecret] = useState('');\n  const [name, setName] = useState('');\n  const [cart, setCart] = useState([]);\n  useEffect(() => {\n    const fetchCartData = async () => {\n      try {\n        const response = await axios.get(`http://localhost:5000/api/users/${encodeURIComponent(authUser._id)}/cart`);\n        if (response.status === 200) {\n          setCart(response.data.cart);\n        } else {\n          console.error('Error fetching cart data: status', response.status);\n        }\n      } catch (error) {\n        console.error('Error fetching cart data:', error);\n      }\n    };\n    const createPaymentIntent = async () => {\n      try {\n        const response = await axios.post('http://localhost:5000/api/create-payment-intent', {\n          amount: total\n        });\n        setClientSecret(response.data.clientSecret);\n      } catch (error) {\n        console.error('Error creating payment intent:', error);\n      }\n    };\n    if (total > 0) {\n      fetchCartData();\n      createPaymentIntent();\n    }\n  }, [total, authUser]);\n  const generateRandomString = (length = 8) => {\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n    let result = '';\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\n    }\n    return result;\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    setProcessing(true);\n    const payload = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: elements.getElement(CardElement),\n        billing_details: {\n          name: name\n        }\n      }\n    });\n    if (payload.error) {\n      setError(`Payment failed: ${payload.error.message}`);\n      setProcessing(false);\n    } else {\n      setError(null);\n      setSucceeded(true);\n      setProcessing(false);\n      const mainkey = generateRandomString();\n      const timestamp = new Date().toISOString();\n      const groupedCartItems = cart.reduce((acc, item) => {\n        if (!acc[item.storeId]) {\n          acc[item.storeId] = [];\n        }\n        acc[item.storeId].push(item);\n        return acc;\n      }, {});\n      for (const [storeId, items] of Object.entries(groupedCartItems)) {\n        const newOrder = {\n          items,\n          mainkey,\n          timestamp,\n          ccname: name,\n          cartTotal: items.reduce((total, item) => total + item.price * item.quantity, 0)\n        };\n        await axios.post(`http://localhost:5000/api/stores/${storeId}/orders`, newOrder);\n      }\n      await axios.delete(`http://localhost:5000/api/users/${encodeURIComponent(authUser._id)}/cart/clear`);\n      navigate('/');\n      setName('');\n      elements.getElement(CardElement).clear();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Name\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: name,\n          onChange: e => setName(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      disabled: processing || succeeded,\n      children: processing ? 'Processing...' : 'Pay Now'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }, this), succeeded && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Payment succeeded!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(StripePay, \"tKLEBj1OA/9xqoFAVYgikDS31cs=\", false, function () {\n  return [useStripe, useElements, useNavigate];\n});\n_c = StripePay;\nexport default StripePay;\nvar _c;\n$RefreshReg$(_c, \"StripePay\");","map":{"version":3,"names":["React","useState","useEffect","useContext","axios","useNavigate","CardElement","useStripe","useElements","UserContext","jsxDEV","_jsxDEV","StripePay","total","_s","authUser","stripe","elements","navigate","error","setError","succeeded","setSucceeded","processing","setProcessing","clientSecret","setClientSecret","name","setName","cart","setCart","fetchCartData","response","get","encodeURIComponent","_id","status","data","console","createPaymentIntent","post","amount","generateRandomString","length","characters","result","charactersLength","i","charAt","Math","floor","random","handleSubmit","event","preventDefault","payload","confirmCardPayment","payment_method","card","getElement","billing_details","message","mainkey","timestamp","Date","toISOString","groupedCartItems","reduce","acc","item","storeId","push","items","Object","entries","newOrder","ccname","cartTotal","price","quantity","delete","clear","onSubmit","children","type","value","onChange","e","target","required","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/react-auth/client/src/components/StripePay.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\r\nimport UserContext from '../context/UserContext';\r\n\r\nconst StripePay = ({ total }) => {\r\n  const { authUser } = useContext(UserContext);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const navigate = useNavigate();\r\n  const [error, setError] = useState(null);\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [processing, setProcessing] = useState(false);\r\n  const [clientSecret, setClientSecret] = useState('');\r\n  const [name, setName] = useState('');\r\n  const [cart, setCart] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchCartData = async () => {\r\n      try {\r\n        const response = await axios.get(`http://localhost:5000/api/users/${encodeURIComponent(authUser._id)}/cart`);\r\n        if (response.status === 200) {\r\n          setCart(response.data.cart);\r\n        } else {\r\n          console.error('Error fetching cart data: status', response.status);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching cart data:', error);\r\n      }\r\n    };\r\n\r\n    const createPaymentIntent = async () => {\r\n      try {\r\n        const response = await axios.post('http://localhost:5000/api/create-payment-intent', { amount: total });\r\n        setClientSecret(response.data.clientSecret);\r\n      } catch (error) {\r\n        console.error('Error creating payment intent:', error);\r\n      }\r\n    };\r\n\r\n    if (total > 0) {\r\n      fetchCartData();\r\n      createPaymentIntent();\r\n    }\r\n  }, [total, authUser]);\r\n\r\n  const generateRandomString = (length = 8) => {\r\n    const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\r\n    let result = '';\r\n    const charactersLength = characters.length;\r\n    for (let i = 0; i < length; i++) {\r\n      result += characters.charAt(Math.floor(Math.random() * charactersLength));\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n\r\n    const payload = await stripe.confirmCardPayment(clientSecret, {\r\n      payment_method: {\r\n        card: elements.getElement(CardElement),\r\n        billing_details: {\r\n          name: name,\r\n        },\r\n      },\r\n    });\r\n\r\n    if (payload.error) {\r\n      setError(`Payment failed: ${payload.error.message}`);\r\n      setProcessing(false);\r\n    } else {\r\n      setError(null);\r\n      setSucceeded(true);\r\n      setProcessing(false);\r\n\r\n      const mainkey = generateRandomString();\r\n      const timestamp = new Date().toISOString();\r\n\r\n      const groupedCartItems = cart.reduce((acc, item) => {\r\n        if (!acc[item.storeId]) {\r\n          acc[item.storeId] = [];\r\n        }\r\n        acc[item.storeId].push(item);\r\n        return acc;\r\n      }, {});\r\n\r\n      for (const [storeId, items] of Object.entries(groupedCartItems)) {\r\n        const newOrder = {\r\n          items,\r\n          mainkey,\r\n          timestamp,\r\n          ccname: name,\r\n          cartTotal: items.reduce((total, item) => total + item.price * item.quantity, 0),\r\n        };\r\n\r\n        await axios.post(`http://localhost:5000/api/stores/${storeId}/orders`, newOrder);\r\n      }\r\n\r\n      await axios.delete(`http://localhost:5000/api/users/${encodeURIComponent(authUser._id)}/cart/clear`);\r\n\r\n      navigate('/');\r\n\r\n      setName('');\r\n      elements.getElement(CardElement).clear();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <div>\r\n        <label>\r\n          Name\r\n          <input\r\n            type=\"text\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n      </div>\r\n      <CardElement />\r\n      <button disabled={processing || succeeded}>\r\n        {processing ? 'Processing...' : 'Pay Now'}\r\n      </button>\r\n      {error && <div>{error}</div>}\r\n      {succeeded && <div>Payment succeeded!</div>}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default StripePay;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}