{"ast":null,"code":"export const api = (path, method = \"GET\", body = null, credentials = null) => {\n  const url = \"http://localhost:5000/api\" + path;\n  const options = {\n    method,\n    headers: {}\n  };\n  if (body) {\n    options.body = JSON.stringify(body);\n    options.headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\n  }\n  if (credentials) {\n    const encodedCredentials = btoa(`${credentials.email}:${credentials.password}`);\n    options.headers.Authorization = `Basic ${encodedCredentials}`;\n  }\n  return fetch(url, options);\n};","map":{"version":3,"names":["api","path","method","body","credentials","url","options","headers","JSON","stringify","encodedCredentials","btoa","email","password","Authorization","fetch"],"sources":["C:/react-auth/client/src/utils/apiHelper.js"],"sourcesContent":["export const api = (\r\n    path,\r\n    method = \"GET\", \r\n    body = null, \r\n    credentials = null\r\n   ) => {\r\n    const url = \"http://localhost:5000/api\" + path;\r\n\r\n    const options = {\r\n        method,\r\n        headers: {}\r\n    };\r\n\r\n    if (body) {\r\n        options.body = JSON.stringify(body);\r\n        options.headers[\"Content-Type\"] = \"application/json; charset=utf-8\";\r\n    }\r\n\r\n    if (credentials) {\r\n        const encodedCredentials = btoa(`${credentials.email}:${credentials.password}`);\r\n        options.headers.Authorization = `Basic ${encodedCredentials}`;\r\n    }\r\n\r\n    return fetch(url, options);\r\n    } \r\n\r\n    "],"mappings":"AAAA,OAAO,MAAMA,GAAG,GAAGA,CACfC,IAAI,EACJC,MAAM,GAAG,KAAK,EACdC,IAAI,GAAG,IAAI,EACXC,WAAW,GAAG,IAAI,KACd;EACJ,MAAMC,GAAG,GAAG,2BAA2B,GAAGJ,IAAI;EAE9C,MAAMK,OAAO,GAAG;IACZJ,MAAM;IACNK,OAAO,EAAE,CAAC;EACd,CAAC;EAED,IAAIJ,IAAI,EAAE;IACNG,OAAO,CAACH,IAAI,GAAGK,IAAI,CAACC,SAAS,CAACN,IAAI,CAAC;IACnCG,OAAO,CAACC,OAAO,CAAC,cAAc,CAAC,GAAG,iCAAiC;EACvE;EAEA,IAAIH,WAAW,EAAE;IACb,MAAMM,kBAAkB,GAAGC,IAAI,CAAE,GAAEP,WAAW,CAACQ,KAAM,IAAGR,WAAW,CAACS,QAAS,EAAC,CAAC;IAC/EP,OAAO,CAACC,OAAO,CAACO,aAAa,GAAI,SAAQJ,kBAAmB,EAAC;EACjE;EAEA,OAAOK,KAAK,CAACV,GAAG,EAAEC,OAAO,CAAC;AAC1B,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}